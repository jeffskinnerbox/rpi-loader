
# Execute on all of [nodes] in inventory
#     ansible-playbook -i inventory playbooks/docker.yml
#
# Execute on test-pi in inventory
#     cd ~/src/linux-tools/rpi-loader
#     ansible-playbook -i inventory -l test-pi playbooks/docker.yml
#
# See: https://github.com/nginxinc/ansible-role-nginx

---

- name: Install Docker Containerization Platform
  hosts: all
  remote_user: ansible
  become: true
  become_method: sudo

  roles:
    # - update
    - prerequisites
    - geerlingguy.docker


# - name: Install Docker Containerization Platform
#   hosts: all
#   become: true
#   vars:
#     install_status: present     # for packages, use 'present' or 'latest' to install and 'absent' to remove
#     repo_status: present        # for repositories, use 'present' to install and 'absent' to remove
#     image_status: present       # for docker image, use 'present' to install and 'absent' to remove
#     container_status: started   # for docker container, use 'absent', 'present', 'stopped', 'started '
#     create_containers: 4
#     default_container_name: docker
#     default_container_image: ubuntu
#     default_container_command: sleep 1d
#     #vars_files:
#       #- vars/default.yml
#
#   tasks:
#     - name: install docker's required system packages
#       apt:
#         state: '{{ install_status }}'
#         update_cache: true
#         cache_valid_time: 3600
#         pkg:
#           - aptitude
#           - apt-transport-https
#           - ca-certificates
#           - curl
#           - software-properties-common
#           - python3-pip
#           - virtualenv
#           - python3-setuptools
#
#     - name: add docker gpg apt key
#       apt_key:
#         state: '{{ repo_status }}'
#         url: https://download.docker.com/linux/ubuntu/gpg
#         #when: state is not "absent"
#
#     - name: add docker repository
#       apt_repository:
#         state: '{{ repo_status }}'
#         repo: deb https://download.docker.com/linux/ubuntu bionic stable
#
#     - name: install docker-ce
#       apt:
#         state: '{{ install_status }}'
#         update_cache: true
#         cache_valid_time: 3600
#         name: docker-ce
#
#     - name: install docker module for python using pip
#       pip:
#         state: '{{ install_status }}'
#         name: docker
#
#     - name: install docker compose using pip
#       pip:
#         state: '{{ install_status }}'
#         name: docker-compose
#
#     - name: pull default docker image
#       docker_image:
#         state: '{{ image_status }}'
#         name: "{{ default_container_image }}"
#         source: pull
#
#     # Creates the number of containers defined by the variable create_containers, using values from vars
#     - name: create default containers
#       docker_container:
#         state: '{{ container_status }}'
#         name: "{{ default_container_name }}{{ item }}"
#         image: "{{ default_container_image }}"
#         command: "{{ default_container_command }}"
#       with_sequence: count={{ create_containers }}
#
