
# Maintainer:   jeffskinnerbox@yahoo.com / www.jeffskinnerbox.me
# Version:      0.0.5
#
# YAML linter to spot Ansible YAML syntax errors
#    yamllint playbooks/dev-env
#    ansible-playbook -i inventory playbooks/login-env/login-env.yml --check --tags install
#
# Ansible linter to spot Ansible playbook syntax errors
#    ansible-playbook -i inventory playbooks/login-env/login-env.yml --syntax-check
#
# Ansible dry-run checking for errors and showing results of a run
#    ansible-playbook -i inventory playbooks/login-env/login-env.yml --check --tags install
#

---

- name: Create your login environment on {{ login_env_host }}
  hosts: "{{ login_env_host }}"
  # remote_user: "{{ app_user }}"
  become: true                   # set to 'true' to activate privilege escalation => use sudo and be root by default
  become_method: sudo
  gather_facts: true
  vars_files:
    - vars/default.yml

  tasks:
    # --------------------------------------------------------------------------
    - name: Install your login environment
      block:
        - name: Install required prerequisites and desirable tools
          apt:
            state: latest            # must be one of: absent, build-dep, fixed, latest, present
            update_cache: true       # update the apt repository list cache
            cache_valid_time: 86400  # update the apt cache if it is older than this seconds
            pkg: ['git', 'git-lfs', 'apt-transport-https', 'gnome-terminal', 'jq', 'markdown', 'vim-gtk3', 'screen']

        - name: clone .bash git repository
          become_user: "{{ app_user }}"
          ansible.builtin.git:
            repo: 'https://github.com/jeffskinnerbox/.bash.git'
            dest: '/home/{{ app_user }}/.bash'
            clone: true

        - name: setup your bash environment
          become_user: "{{ app_user }}"
          ansible.builtin.shell: |
            cd ~
            rm ~/.bashrc ~/.bash_logout
            ln -s ~/.bash/inputrc ~/.inputrc
            ln -s ~/.bash/bashrc ~/.bashrc
            ln -s ~/.bash/bash_login ~/.bash_login
            ln -s ~/.bash/bash_logout ~/.bash_logout
            ln -s ~/.bash/bash_profile ~/.bash_profile
          args:
            executable: /usr/bin/bash

        - name: source/load the changes into your profile
          become_user: "{{ app_user }}"
          ansible.builtin.shell: |
            source ~/.bashrc
          args:
            executable: /usr/bin/bash

        - name: clone .vim git repository
          become_user: "{{ app_user }}"
          ansible.builtin.git:
            repo: 'https://github.com/jeffskinnerbox/.vim.git'
            dest: '/home/{{ app_user }}/.vim'
            clone: true
            update: true    # perform an update on submodules in the git repository in the git repository

        - name: setup your vim environment
          become_user: "{{ app_user }}"
          ansible.builtin.shell: |
            cd ~
            ln -s ~/.vim/vimrc ~/.vimrc
            mkdir ~/.vim/backup
            mkdir ~/.vim/tmp
          args:
            executable: /usr/bin/bash

        - name: clone .X git repository
          become_user: "{{ app_user }}"
          ansible.builtin.git:
            repo: 'https://github.com/jeffskinnerbox/.X.git'
            dest: '/home/{{ app_user }}/.X'
            clone: true

        - name: setup your x windows environment
          become_user: "{{ app_user }}"
          ansible.builtin.shell: |
            cd ~
            ln -s ~/.X/xbindkeysrc ~/.xbindkeysrc
            ln -s ~/.X/Xresources ~/.Xresources
            ln -s ~/.X/xsessionrc ~/.xsessionrc
          args:
            executable: /usr/bin/bash

        - name: rebuilding $HOME/.Xauthority to avoid MIT magic cookie error
          become_user: "{{ app_user }}"
          ansible.builtin.shell: |
            cd ~
            touch ~/.Xauthority
            xauth generate :0 . trusted
            xauth add ${HOST}:0 . `xxd -l 16 -p /dev/urandom`
          args:
            executable: /usr/bin/bash

        - name: add google chrome apt signing key
          apt_key:
            url: "https://dl.google.com/linux/linux_signing_key.pub"
            state: present

        - name: add google chrome repository into sources list
          apt_repository:
            repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
            state: present
            filename: google-chrome

        - name: install google-chrome-stable - your favorite browser
          apt:
            state: latest
            update_cache: true
            pkg: ['google-chrome-stable']
      tags: ['never', 'install']     # 'never' implies you must pass the 'install' tag to execute this block

    # --------------------------------------------------------------------------
    - name: Uninstall your login environment
      block:
        - name: remove all login environment related files & directories
          become_user: "{{ app_user }}"
          ansible.builtin.shell: |
            cd ~
            rm .bash_logout .inputrc .bashrc .bash_login .bash_logout .bash_profile
            rm .vimrc .xbindkeysrc .Xresources .xsessionrc .Xauthority
            rm -r -f .bash .vim .X
          args:
            executable: /usr/bin/bash

        - name: uninstall google-chrome-stable
          apt:
            name: google-chrome-stable
            state: absent
      tags: ['never', 'uninstall']   # 'never' implies you must pass the 'install' tag to execute this block

